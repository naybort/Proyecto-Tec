//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ITCR.DATIC.SistemaHorasConsulta.Modelo
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SistemaHorasConsultaEntities : DbContext
    {
        public SistemaHorasConsultaEntities()
            : base("name=SistemaHorasConsultaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cita> Citas { get; set; }
        public virtual DbSet<Estudiante> Estudiantes { get; set; }
        public virtual DbSet<Horario> Horarios { get; set; }
        public virtual DbSet<Lugare> Lugares { get; set; }
        public virtual DbSet<Profesor> Profesors { get; set; }
        public virtual DbSet<SubTematica> SubTematicas { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Tematica> Tematicas { get; set; }
        public virtual DbSet<FeedbackCita> FeedbackCitas { get; set; }
    
        public virtual int Pr_Cita_Insertar(Nullable<int> idLugar, Nullable<int> idHorario, Nullable<int> idProfesor, Nullable<int> idEstudiante, Nullable<System.TimeSpan> horaInicio)
        {
            var idLugarParameter = idLugar.HasValue ?
                new ObjectParameter("IdLugar", idLugar) :
                new ObjectParameter("IdLugar", typeof(int));
    
            var idHorarioParameter = idHorario.HasValue ?
                new ObjectParameter("IdHorario", idHorario) :
                new ObjectParameter("IdHorario", typeof(int));
    
            var idProfesorParameter = idProfesor.HasValue ?
                new ObjectParameter("IdProfesor", idProfesor) :
                new ObjectParameter("IdProfesor", typeof(int));
    
            var idEstudianteParameter = idEstudiante.HasValue ?
                new ObjectParameter("IdEstudiante", idEstudiante) :
                new ObjectParameter("IdEstudiante", typeof(int));
    
            var horaInicioParameter = horaInicio.HasValue ?
                new ObjectParameter("HoraInicio", horaInicio) :
                new ObjectParameter("HoraInicio", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pr_Cita_Insertar", idLugarParameter, idHorarioParameter, idProfesorParameter, idEstudianteParameter, horaInicioParameter);
        }
    
        public virtual ObjectResult<Pr_CitaEspecifica_Consultar_Result> Pr_CitaEspecifica_Consultar(Nullable<int> idCita)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_CitaEspecifica_Consultar_Result>("Pr_CitaEspecifica_Consultar", idCitaParameter);
        }
    
        public virtual ObjectResult<Pr_Citas_Consultar_Result> Pr_Citas_Consultar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Citas_Consultar_Result>("Pr_Citas_Consultar");
        }
    
        public virtual int Pr_Citas_Eliminar(Nullable<int> idCita)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pr_Citas_Eliminar", idCitaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Pr_CitasXEstudiante_Obtener(Nullable<int> idEstudiante)
        {
            var idEstudianteParameter = idEstudiante.HasValue ?
                new ObjectParameter("IdEstudiante", idEstudiante) :
                new ObjectParameter("IdEstudiante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Pr_CitasXEstudiante_Obtener", idEstudianteParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Pr_CitasXProfesor_Obtener(Nullable<int> idProfesor)
        {
            var idProfesorParameter = idProfesor.HasValue ?
                new ObjectParameter("IdProfesor", idProfesor) :
                new ObjectParameter("IdProfesor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Pr_CitasXProfesor_Obtener", idProfesorParameter);
        }
    
        public virtual ObjectResult<Pr_Estudiantes_Consultar_Result> Pr_Estudiantes_Consultar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Estudiantes_Consultar_Result>("Pr_Estudiantes_Consultar");
        }
    
        public virtual int Pr_Estudiantes_Crear(Nullable<int> idEstudiante, string nombre, string primerApellido, string segundoApellido, string correoElectronico)
        {
            var idEstudianteParameter = idEstudiante.HasValue ?
                new ObjectParameter("IdEstudiante", idEstudiante) :
                new ObjectParameter("IdEstudiante", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("PrimerApellido", primerApellido) :
                new ObjectParameter("PrimerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("SegundoApellido", segundoApellido) :
                new ObjectParameter("SegundoApellido", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pr_Estudiantes_Crear", idEstudianteParameter, nombreParameter, primerApellidoParameter, segundoApellidoParameter, correoElectronicoParameter);
        }
    
        public virtual int Pr_Horario_Insertar(string dia, Nullable<System.TimeSpan> horaInicio, Nullable<System.TimeSpan> horaFinal)
        {
            var diaParameter = dia != null ?
                new ObjectParameter("Dia", dia) :
                new ObjectParameter("Dia", typeof(string));
    
            var horaInicioParameter = horaInicio.HasValue ?
                new ObjectParameter("HoraInicio", horaInicio) :
                new ObjectParameter("HoraInicio", typeof(System.TimeSpan));
    
            var horaFinalParameter = horaFinal.HasValue ?
                new ObjectParameter("HoraFinal", horaFinal) :
                new ObjectParameter("HoraFinal", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pr_Horario_Insertar", diaParameter, horaInicioParameter, horaFinalParameter);
        }
    
        public virtual ObjectResult<Pr_HorarioProfesor_Consultar_Result> Pr_HorarioProfesor_Consultar(Nullable<int> idProfesor)
        {
            var idProfesorParameter = idProfesor.HasValue ?
                new ObjectParameter("IdProfesor", idProfesor) :
                new ObjectParameter("IdProfesor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_HorarioProfesor_Consultar_Result>("Pr_HorarioProfesor_Consultar", idProfesorParameter);
        }
    
        public virtual int Pr_Lugar_Insertar(string nombreLugar)
        {
            var nombreLugarParameter = nombreLugar != null ?
                new ObjectParameter("NombreLugar", nombreLugar) :
                new ObjectParameter("NombreLugar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pr_Lugar_Insertar", nombreLugarParameter);
        }
    
        public virtual int Pr_SubTematica_Insertar(string nombre, string descripcion, Nullable<int> idTematica)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idTematicaParameter = idTematica.HasValue ?
                new ObjectParameter("IdTematica", idTematica) :
                new ObjectParameter("IdTematica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pr_SubTematica_Insertar", nombreParameter, descripcionParameter, idTematicaParameter);
        }
    
        public virtual int Pr_Tematica_Insertar(string nombreTematica, string descripcion, Nullable<int> idProfesor)
        {
            var nombreTematicaParameter = nombreTematica != null ?
                new ObjectParameter("NombreTematica", nombreTematica) :
                new ObjectParameter("NombreTematica", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idProfesorParameter = idProfesor.HasValue ?
                new ObjectParameter("IdProfesor", idProfesor) :
                new ObjectParameter("IdProfesor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pr_Tematica_Insertar", nombreTematicaParameter, descripcionParameter, idProfesorParameter);
        }
    
        public virtual ObjectResult<Pr_Tematicas_Consultar_Result> Pr_Tematicas_Consultar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Tematicas_Consultar_Result>("Pr_Tematicas_Consultar");
        }
    
        public virtual ObjectResult<Pr_TematicasProfesor_Consultar_Result> Pr_TematicasProfesor_Consultar(Nullable<int> idTematica)
        {
            var idTematicaParameter = idTematica.HasValue ?
                new ObjectParameter("IdTematica", idTematica) :
                new ObjectParameter("IdTematica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_TematicasProfesor_Consultar_Result>("Pr_TematicasProfesor_Consultar", idTematicaParameter);
        }
    
        public virtual ObjectResult<Pr_TematicasProfesor_Consultar_Prueba_Result> Pr_TematicasProfesor_Consultar_Prueba(Nullable<int> idTematica)
        {
            var idTematicaParameter = idTematica.HasValue ?
                new ObjectParameter("IdTematica", idTematica) :
                new ObjectParameter("IdTematica", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_TematicasProfesor_Consultar_Prueba_Result>("Pr_TematicasProfesor_Consultar_Prueba", idTematicaParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
